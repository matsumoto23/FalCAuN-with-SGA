#inputs [usr3_ai1_re1, ai2_ce2, usr1_ai2_re2, usr1_ai2_re3, usr1_ai2_re1, ai4_ce1, usr1_ai3_re3, usr1_ai3_re2, usr1_ai3_re1, usr1_ai3_re5, usr1_ai3_re4, usr1_ai1_VoidReply, ai2_ce3, ai2_ce1, ai1_ce1, ai1_ce3, ai1_ce2, ai1_ce4, usr2_ni1_ne1, usr2_ai1_VoidReply, ai3_ce3, ai3_ce2, ai3_ce1, usr1_ai2_VoidReply, usr1_ai4_re1, usr1_ai4_re2, usr4_ai1_VoidReply]
#outputs [ai2_VoidReply, usr1_ai1_ce4, ni1_ne3__ai4_VoidReply, ai3_re2, ai3_re3, ai3_re1, ni1_ne3, ai1_VoidReply, ni1_ne4, ni1_ne2__usr1_ai3_ce4, ni1_ne4__ai2_re1, usr1_ai2_ce3, usr1_ai2_ce2, usr1_ai2_ce1, ni1_ne4__ai1_VoidReply, ni1_ne4__ai2_VoidReply, usr4_ai1_ce1, ai4_VoidReply, usr1_ai4_ce1, usr1_ai1_ce1, usr1_ai1_ce2, usr1_ai1_ce3, usr3_ai1_ce1, ai2_re3, ai2_re2, ai2_re1, ni1_ne4__ai4_VoidReply, none, ni1_ne3__ai1_VoidReply, usr1_ai3_ce4, usr1_ai3_ce5, usr1_ai3_ce2, usr1_ai3_ce3, usr1_ai3_ce1, ni1_ne1__usr1_ai3_ce4, ni1_ne3__ai2_re1, usr2_ai1_ce1, ni1_ne3__ai2_VoidReply]
#0: input ai2_ce3, input ai1_ce2 precedes output ai2_re2 between input ai1_ce4 and input ai3_ce2
(false R (! (iai1_ce4 & (true U iai3_ce2)) | (! oai2_re2 U (iai3_ce2 | ((iai2_ce3 & ! oai2_re2) & X (! oai2_re2 U iai1_ce2))))))

#1: output usr3_ai1_ce1 always responds to input ai1_ce4
(false R (! iai1_ce4 | (true U ousr3_ai1_ce1)))

#2: output ni1_ne3__ai2_re1 precedes output usr4_ai1_ce1 after output usr1_ai3_ce4 until output usr1_ai1_ce1
(false R (ousr1_ai3_ce4 & (! ! ousr1_ai1_ce1 | (! ousr4_ai1_ce1 WU (oni1_ne3__ai2_re1 | ousr1_ai1_ce1)))))

#3: output ni1_ne3__ai1_VoidReply responds to input ai1_ce2 after output ai2_re1
(false R (! oai2_re1 | (false R (! iai1_ce2 | (true U oni1_ne3__ai1_VoidReply)))))

#4: output usr1_ai3_ce5, output usr1_ai1_ce1 responds to input ai3_ce3 before input usr4_ai1_VoidReply
(! (true U iusr4_ai1_VoidReply) | ((! iai3_ce3 | (! iusr4_ai1_VoidReply U ((ousr1_ai3_ce5 & ! iusr4_ai1_VoidReply) & X (! iusr4_ai1_VoidReply U ousr1_ai1_ce1)))) U iusr4_ai1_VoidReply))

#5: input ai1_ce2, input usr1_ai3_re2 precedes output ai4_VoidReply after output ai2_re3 until input usr4_ai1_VoidReply
(false R (! oai2_re3 | (! (true U oai4_VoidReply) | (! oai4_VoidReply U (iusr4_ai1_VoidReply | ((iai1_ce2 & ! oai4_VoidReply) & X (! oai4_VoidReply U iusr1_ai3_re2)))))))

#6: output usr1_ai3_ce5 responds to input usr1_ai1_VoidReply before output ni1_ne2__usr1_ai3_ce4
(! (true U oni1_ne2__usr1_ai3_ce4) | ((! iusr1_ai1_VoidReply | (! oni1_ne2__usr1_ai3_ce4 U (ousr1_ai3_ce5 & ! oni1_ne2__usr1_ai3_ce4))) U oni1_ne2__usr1_ai3_ce4))

#7: input usr2_ni1_ne1 precedes output ni1_ne3__ai2_VoidReply before output usr3_ai1_ce1
(! (true U ousr3_ai1_ce1) | (! oni1_ne3__ai2_VoidReply U (iusr2_ni1_ne1 | ousr3_ai1_ce1)))

#8: output ai2_VoidReply, output usr1_ai1_ce2 without output usr1_ai3_ce3 always responds to input ai3_ce1
(false R (! iai3_ce1 | (true U ((oai2_VoidReply & ! ousr1_ai3_ce3) & X (! ousr1_ai3_ce3 U ousr1_ai1_ce2)))))

#9: input usr1_ai3_re3 precedes output usr1_ai3_ce4, output usr1_ai1_ce4 after output ai3_re3
((false R ! oai3_re3) | (! oai3_re3 U (oai3_re3 & (! (true U (ousr1_ai3_ce4 & X (true U ousr1_ai1_ce4))) | (! ousr1_ai3_ce4 U iusr1_ai3_re3)))))

#10: output usr1_ai1_ce4, output usr1_ai3_ce2 always precedes output ni1_ne4__ai4_VoidReply
(! (true U oni1_ne4__ai4_VoidReply) | (! oni1_ne4__ai4_VoidReply U ((ousr1_ai1_ce4 & ! oni1_ne4__ai4_VoidReply) & X (! oni1_ne4__ai4_VoidReply U ousr1_ai3_ce2))))

#11: output usr2_ai1_ce1 precedes output usr1_ai2_ce1, output ai3_re1 before input usr2_ai1_VoidReply
(! (true U iusr2_ai1_VoidReply) | (! ((ousr1_ai2_ce1 & ! iusr2_ai1_VoidReply) & X (! iusr2_ai1_VoidReply U (oai3_re1 & ! iusr2_ai1_VoidReply))) U (iusr2_ai1_VoidReply | ousr2_ai1_ce1)))

#12: output usr4_ai1_ce1 responds to input usr1_ai3_re1 after output usr1_ai3_ce1
(false R (! ousr1_ai3_ce1 | (false R (! iusr1_ai3_re1 | (true U ousr4_ai1_ce1)))))

#13: output ai2_VoidReply precedes output ni1_ne1__usr1_ai3_ce4 between output ni1_ne4__ai2_re1 and output usr3_ai1_ce1
(false R (! ((oni1_ne4__ai2_re1 & ! ousr3_ai1_ce1) & (true U ousr3_ai1_ce1)) | (! oni1_ne1__usr1_ai3_ce4 U (oai2_VoidReply | ousr3_ai1_ce1))))

#14: output usr1_ai4_ce1 always responds to input ai4_ce1
(false R (! iai4_ce1 | (true U ousr1_ai4_ce1)))

#15: input ai1_ce2 always precedes output usr1_ai1_ce4, output usr2_ai1_ce1
(! (true U (ousr1_ai1_ce4 & X (true U ousr2_ai1_ce1))) | (! ousr1_ai1_ce4 U iai1_ce2))

#16: output usr4_ai1_ce1 responds to input usr1_ai3_re4 between output usr1_ai2_ce3 and output usr1_ai1_ce4
(false R (! ((ousr1_ai2_ce3 & ! ousr1_ai1_ce4) & (true U ousr1_ai1_ce4)) | ((! iusr1_ai3_re4 | (! ousr1_ai1_ce4 U (ousr4_ai1_ce1 & ! ousr1_ai1_ce4))) U ousr1_ai1_ce4)))

#17: output ai3_re3, output ni1_ne4__ai4_VoidReply responds to input usr1_ai3_re4 before input ai1_ce3
(! (true U iai1_ce3) | ((! iusr1_ai3_re4 | (! iai1_ce3 U ((oai3_re3 & ! iai1_ce3) & X (! iai1_ce3 U oni1_ne4__ai4_VoidReply)))) U iai1_ce3))

#18: output usr2_ai1_ce1, output ai1_VoidReply without output usr1_ai2_ce1 always responds to input usr4_ai1_VoidReply
(false R (! iusr4_ai1_VoidReply | (true U ((ousr2_ai1_ce1 & ! ousr1_ai2_ce1) & X (! ousr1_ai2_ce1 U oai1_VoidReply)))))

#19: input ai4_ce1 precedes output ai4_VoidReply, output ni1_ne4__ai1_VoidReply between input ai2_ce2 and input usr1_ai3_re1
(false R (! (iai2_ce2 & (true U iusr1_ai3_re1)) | (! ((oai4_VoidReply & ! iusr1_ai3_re1) & X (! iusr1_ai3_re1 U (oni1_ne4__ai1_VoidReply & ! iusr1_ai3_re1))) U (iusr1_ai3_re1 | iai4_ce1))))

